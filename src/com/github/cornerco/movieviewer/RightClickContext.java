/*
 * RightClickContext.java
 *
 * Created on 22 March 2008, 20:43
 */
package com.github.cornerco.movieviewer;

import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Peter Hoek
 */
public class RightClickContext extends javax.swing.JDialog {

    private final MovieViewer parent;
    private final Category category;
    private final Movie movie;

    public RightClickContext(MovieViewer parent, Category category, Movie movie, int x, int y) {
        super(parent, true);

        this.parent = parent;
        this.category = category;
        this.movie = movie;

        initComponents();

        viewCountField.setText(String.valueOf(movie.getViews()));
        lockedCheckbox.setSelected(movie.isProtected());

        setTitle(movie.getName());
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setLocation(x, y);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lockedCheckbox = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        resetCounter = new javax.swing.JButton();
        viewCountField = new javax.swing.JTextField();
        deleteButton = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lockedCheckbox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lockedCheckbox.setText("Lock");
        lockedCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lockedCheckboxActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Counter:");

        resetCounter.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        resetCounter.setText("Reset Counter");
        resetCounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetCounterActionPerformed(evt);
            }
        });

        viewCountField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewCountField.setText("0");
        viewCountField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                viewCountFieldKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                viewCountFieldKeyReleased(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(viewCountField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(resetCounter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lockedCheckbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lockedCheckbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(viewCountField)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lockedCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lockedCheckboxActionPerformed
        movie.setProtected(lockedCheckbox.isSelected());
        parent.refreshMovieList();
    }//GEN-LAST:event_lockedCheckboxActionPerformed

    private void resetCounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetCounterActionPerformed
        movie.setViews(0);
        viewCountField.setText(String.valueOf(0));
        parent.refreshMovieList();
    }//GEN-LAST:event_resetCounterActionPerformed

    private void viewCountFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_viewCountFieldKeyTyped
        if ('0' > evt.getKeyChar() || '9' < evt.getKeyChar()) {
            evt.consume();
        }
    }//GEN-LAST:event_viewCountFieldKeyTyped

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int reply = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete " + movie.getName() + "?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            int reply2 = JOptionPane.showConfirmDialog(null, "Are you sure you REALLY SURE you want to delete " + movie.getName() + "?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
            if (reply2 == JOptionPane.YES_OPTION) {
                if (!movie.getFile().getName().toLowerCase().endsWith("ifo")) {
                    movie.getFile().delete();
                } else {
                    //If an ifo is in a main directory everything will be wiped
                    //so only delete the ifo

                    movie.getFile().delete();

                    try {
                        new File(movie.getFile().getParentFile(), "DELETE EVERYTHING.GO").createNewFile();
                    } catch (IOException ex) {
                        Logger.getLogger(RightClickContext.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }

        MovieManager.getInstance().removeCategory(category);
        category.invalidate();
        MovieManager.getInstance().addCategory(category);
        parent.activateCategory(category);
        parent.refreshMovieList();

        dispose();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void viewCountFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_viewCountFieldKeyReleased
        if (!viewCountField.getText().isEmpty()) {
            movie.setViews(Integer.parseInt(viewCountField.getText()));
            parent.refreshMovieList();
        }
    }//GEN-LAST:event_viewCountFieldKeyReleased
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JCheckBox lockedCheckbox;
    private javax.swing.JButton resetCounter;
    private javax.swing.JTextField viewCountField;
    // End of variables declaration//GEN-END:variables
}
